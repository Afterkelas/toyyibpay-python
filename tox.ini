[tox]
envlist = 
    py{38,39,310,311,312}
    py{38,39,310,311,312}-{postgres,flask,fastapi}
    lint
    mypy
    docs
    coverage
isolated_build = True
skip_missing_interpreters = True

[testenv]
deps =
    pytest>=7.0.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
    pytest-timeout>=2.1.0
    faker>=18.0.0
    freezegun>=1.2.0
extras =
    postgres: postgres
    flask: flask
    fastapi: fastapi
commands =
    pytest {posargs:tests}
setenv =
    PYTHONPATH = {toxinidir}
    PYTEST_TIMEOUT = 300
passenv = 
    DATABASE_URL
    TOYYIBPAY_*

[testenv:py{38,39,310,311,312}-postgres]
deps =
    {[testenv]deps}
    sqlalchemy>=2.0.0
    psycopg2-binary>=2.9.0
    alembic>=1.9.0
commands =
    pytest {posargs:tests} -m "db"

[testenv:py{38,39,310,311,312}-flask]
deps =
    {[testenv]deps}
    flask>=2.0.0
commands =
    pytest {posargs:tests/test_flask_integration.py}

[testenv:py{38,39,310,311,312}-fastapi]
deps =
    {[testenv]deps}
    fastapi>=0.100.0
    httpx>=0.24.0
commands =
    pytest {posargs:tests/test_fastapi_integration.py}

[testenv:lint]
skip_install = True
deps =
    black>=23.0.0
    isort>=5.12.0
    flake8>=6.0.0
    flake8-docstrings>=1.7.0
    flake8-bugbear>=23.0.0
commands =
    black --check toyyibpay tests
    isort --check-only toyyibpay tests
    flake8 toyyibpay tests

[testenv:format]
skip_install = True
deps =
    black>=23.0.0
    isort>=5.12.0
commands =
    black toyyibpay tests
    isort toyyibpay tests

[testenv:mypy]
deps =
    mypy>=1.0.0
    types-python-dateutil>=2.8.0
commands =
    mypy toyyibpay

[testenv:docs]
deps =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.2.0
    sphinx-autodoc-typehints>=1.22.0
commands =
    sphinx-build -b html -W -d {envtmpdir}/doctrees docs {envtmpdir}/html

[testenv:coverage]
deps =
    {[testenv]deps}
    coverage[toml]>=7.0.0
commands =
    coverage erase
    coverage run -m pytest tests
    coverage report
    coverage html
    coverage xml

[testenv:build]
skip_install = True
deps =
    build>=0.10.0
    twine>=4.0.0
commands =
    python -m build
    twine check dist/*

[testenv:release]
skip_install = True
deps =
    {[testenv:build]deps}
commands =
    {[testenv:build]commands}
    twine upload dist/*
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY_URL

# Linting Configuration
[flake8]
max-line-length = 88
max-complexity = 10
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv,
    migrations
ignore =
    # Black compatibility
    E203,  # whitespace before ':'
    W503,  # line break before binary operator
    # Documentation
    D100,  # Missing docstring in public module
    D104,  # Missing docstring in public package
    D105,  # Missing docstring in magic method
    D107,  # Missing docstring in __init__
per-file-ignores =
    tests/*:D101,D102,D103
    conftest.py:D100,D101,D102,D103

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 88
skip = .tox,venv,build,dist

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
strict_optional = True
strict_equality = True
namespace_packages = True
show_error_codes = True
pretty = True

[mypy-tests.*]
disallow_untyped_defs = False

[mypy-httpx.*]
ignore_missing_imports = True

[mypy-sqlalchemy.*]
ignore_missing_imports = True